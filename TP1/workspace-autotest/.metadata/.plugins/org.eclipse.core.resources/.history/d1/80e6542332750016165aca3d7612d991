import time

startTime = time.time()

# stdlib imports
import sys



class RandPy:
    def __init__(self):
        pass

    def generate_tests(self, targetPyFile, maxIterations, maxTime, output_dir, random_seed):




        pyntch_wrapper.setup()
        pyFilename = os.getcwd() + module_name
        module = pyntch_wrapper.addFile(targetPyFile)
        pyntch_wrapper.runAnalysis()
        # display all functions of pyntch_example
        for f in module.children:
            if isinstance(f, pyntch.function.FuncType):
                print("Function " + f.name)
                for argname in f.argnames:
                    print(" argName:" + argname)
                    argTypes = f.space[argname].types
                    types_str = print_pyntch_types(argTypes)
                    print(" argTypes: " + types_str)
            




        limit = start + maxTime
        iteracionesFaltantes = maxIterations
           
        tests = list()
        
        branch_coverage = 0
        line_coverage = 0
        while(time.time() <= maxTime and (maxIterations == -1 or iteracionesFaltantes > 0)):
            t = generate_new_test_call(targetPyFile, random_seed)
            r = execute(t)
            # aumento branches o lineas
            if r.branch_coverage <= branch_coverage:
                pass
            endif
            if r.line_coverage <= line_coverage:
                pass
            endif
            line_coverage = r.line_coverage
            branch_coverage = r.branch_coverage
            tests.add(t)
            write_test_to_file(output_dir, test)
            output_dir.save(t)

            iteracionesFaltantes -= 1
        endwhile


    
if __name__ == "__main__":
    if len(sys.argv) != 5:
        print("Usage <targetPyFile> <maxIterations> <maxTime> <outputDir> <randomSeed>")
        sys.exit()
    
    # load the cli arguments
    targetPyFile = sys.argv[1]
    maxIterations = int(sys.argv[2])
    maxTime = float(sys.argv[3])
    output_dir = sys.argv[4]
    random_seed = int(sys.argv[5])

    randPy = RandPy()
    randPy.generate_tests(targetPyFile, maxIterations, maxTime, output_dir, random_seed)
    
